<?xml version="1.0" encoding="utf-8"?>
<ShaderSettings Name="DualTextureEnvRigidBase_Def">
  <Semantics>
    <Semantic DeepSemantic="Reflection" GcmSemantic="C128">
      <Annotations>
        <Annotation InstanceCached="true" />
        <Annotation FriendlyName="Reflection" />
        <Annotation MinValue="0" />
        <Annotation MaxValue="1.5" />
      </Annotations>
      <DefaultValues>
        <DefaultValue ValueIndex="0" Value="0.5" />
      </DefaultValues>
    </Semantic>
  </Semantics>
  <Samplers>
    <Sampler SamplerIndex="0" DeepSemantic="Diffuse" GcmSemantic="S0">
      <SamplerStates>
        <SamplerState Type="TextureFilter">
          <Argument min="CELL_GCM_TEXTURE_LINEAR_LINEAR" />
          <Argument mag="CELL_GCM_TEXTURE_LINEAR" />
        </SamplerState>
        <SamplerState Type="TextureAddress">
          <Argument wraps="CELL_GCM_TEXTURE_WRAP" />
          <Argument wrapt="CELL_GCM_TEXTURE_WRAP" />
        </SamplerState>
        <SamplerState Type="TextureControl">
          <Argument enable="CELL_GCM_TRUE" />
        </SamplerState>
      </SamplerStates>
      <Annotations>
        <Annotation InstanceCached="true" />
        <Annotation FriendlyName="Base Diffuse + Alpha Reflection Mask" />
      </Annotations>
    </Sampler>
    <Sampler SamplerIndex="1" DeepSemantic="Diffuse2" GcmSemantic="S1">
      <SamplerStates>
        <SamplerState Type="TextureFilter">
          <Argument min="CELL_GCM_TEXTURE_LINEAR_LINEAR" />
          <Argument mag="CELL_GCM_TEXTURE_LINEAR" />
        </SamplerState>
        <SamplerState Type="TextureAddress">
          <Argument wraps="CELL_GCM_TEXTURE_CLAMP_TO_EDGE" />
          <Argument wrapt="CELL_GCM_TEXTURE_CLAMP_TO_EDGE" />
        </SamplerState>
        <SamplerState Type="TextureControl">
          <Argument enable="CELL_GCM_TRUE" />
        </SamplerState>
      </SamplerStates>
      <Annotations>
        <Annotation InstanceCached="true" />
        <Annotation FriendlyName="2nd Diffuse + Mask" />
      </Annotations>
    </Sampler>
  </Samplers>
  <RenderStates>
    <RenderState Type="StencilTestEnable">
      <Argument enable="CELL_GCM_TRUE" />
    </RenderState>
    <RenderState Type="StencilFunc">
      <Argument func="CELL_GCM_EQUAL" />
      <Argument ref="0xFF" />
      <Argument mask="0x08" />
    </RenderState>
  </RenderStates>
  <RenderStateSemantics>
    <RenderStateSemantic DeepSemantic="MipBias" DeepType="int" SamplerMask="0000000000000011" />
    <RenderStateSemantic DeepSemantic="TextureClamp" DeepType="int" SamplerMask="0000000000000010" >
      <Values>
        <Value DeepValue="0" GcmValue="CELL_GCM_TEXTURE_WRAP" />
        <Value DeepValue="1" GcmValue="CELL_GCM_TEXTURE_CLAMP_TO_EDGE" />
      </Values>
      <Annotations>
        <Annotation InstanceCached="true" />
        <Annotation FriendlyName="Texture Clamp" />
      </Annotations>
    </RenderStateSemantic>
	<RenderStateSemantic DeepSemantic="FadeStencil" DeepType="int">
		<Values>
			<Value DeepValue="0" GcmValue="CELL_GCM_FALSE" />
			<Value DeepValue="1" GcmValue="CELL_GCM_TRUE" />
		</Values>
		<Annotations>
			<Annotation InstanceCached="true" />
		</Annotations>
	</RenderStateSemantic>
  </RenderStateSemantics>
</ShaderSettings>